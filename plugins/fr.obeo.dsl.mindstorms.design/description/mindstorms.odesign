<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="mindstorms" version="11.0.0.201511131800">
  <ownedViewpoints name="MindstormsViewpoint" label="Mindstorms" modelFileExtension="*.mindstorms">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="MindstormsDiagram" label="Mindstorms" titleExpression="aql:'Mindstorms Diagram'" initialisation="true" showOnStartup="true" domainClass="mindstorms.Main" enablePopupBars="true">
      <metamodel href="http://www.obeo.fr/dsl/mindstorms/1.0.0#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="MindstormsDiagramDefaultLayer" label="Default">
        <nodeMappings name="MDN_Action" label="Action" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="feature:instructions" domainClass="mindstorms.Action">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/GoForward_48px.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::Delay)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Delay_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::GoTo)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/GoTo_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::Grab)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Grab_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::Release)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Release_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::ReturnToBase)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/ReturnToBase_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::Rotate) and self.degrees >= 0">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Rotate_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::Rotate)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Rotate_Right_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::GoBackward)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/GoBackward_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(mindstorms::GoToEnemy)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.computeLabel()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" sizeComputationExpression="-1" labelPosition="node" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/GoToEnemy_48px.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="MDN_Begin" label="Begin" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DoNotDeleteBeginEnd']" semanticCandidatesExpression="aql:self" domainClass="mindstorms.Main">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" labelAlignment="LEFT" tooltipExpression="aql:'Begin'" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Begin_48px.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MDN_End" label="End" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DoNotDeleteBeginEnd']" semanticCandidatesExpression="aql:self" domainClass="mindstorms.Main">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" labelAlignment="LEFT" tooltipExpression="aql:'End'" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/End_48px.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="MDE_EdgeInstruction" label="Edge Instruction" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']" targetFinderExpression="service:getNextInstruction()" reconnections="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MRE_InstructionSource'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MRE_InstructionTarget']">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MDE_BeginToFirstInstruction" label="Begin To First Instruction" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Begin']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']" targetFinderExpression="aql:self.instructions->first()">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MDE_LastInstructionToEnd" label="Last Instruction To End" preconditionExpression="aql:self.eContainerOrSelf(mindstorms::Main).instructions->last() = self" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_End']" targetFinderExpression="aql:self.eContainerOrSelf(mindstorms::Main)">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="MC_Procedure" label="Container Procedure" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="feature:instructions" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_OpenDiagram']" domainClass="mindstorms.Procedure" childrenPresentation="List">
          <subNodeMappings name="MDN_ProcedureBlock" label="Procedure Blocks" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Block">
            <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.nameInError()">
              <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Red']" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.condition = null">
              <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Red']" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" labelSize="12" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Procedure_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']">
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.nameInError()">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" labelSize="12" labelColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Red']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Procedure_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']">
              <labelFormat>bold</labelFormat>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="MC_While" label="Container While" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="feature:instructions" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDD_SwitchColor']" domainClass="mindstorms.While" childrenPresentation="List">
          <subNodeMappings name="MDN_WhileBlock" label="While Blocks" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Block">
            <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" labelSize="12" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']">
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.condition = null">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" labelSize="12" labelExpression="aql:self.computeLabel()" labelColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Red']" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']">
              <labelFormat>bold</labelFormat>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::ColorSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::TouchSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/TouchSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::UltrasonicSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/UltrasonicSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green1']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="MC_If" label="Container If" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="feature:instructions" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDD_SwitchColor']" domainClass="mindstorms.If" childrenPresentation="List">
          <subNodeMappings name="MDN_IfBlock" label="If Blocks" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Block">
            <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" labelSize="12" labelExpression="aql:self.computeLabel()" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']">
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.condition = null">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" labelSize="12" labelExpression="aql:self.computeLabel()" labelColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Red']" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']">
              <labelFormat>bold</labelFormat>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::ColorSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::TouchSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/TouchSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.condition.oclIsKindOf(mindstorms::UltrasonicSensor)">
            <style xsi:type="style:FlatContainerStyleDescription" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" labelSize="12" labelExpression="aql:self.computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/UltrasonicSensor_16px.png" tooltipExpression="aql:self.computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green2']">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="MD_ReuseProcedure" label="Container Reuse Procedure" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Element']" semanticCandidatesExpression="aql:self.instructions->filter(mindstorms::ReuseInstruction)->select(ins | ins.reuse.oclIsKindOf(mindstorms::Procedure))" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_OpenDiagramReuse']" domainClass="mindstorms.ReuseInstruction" childrenPresentation="List">
          <subNodeMappings name="MDN_ReuseBlock" label="Node Reuse Block" semanticCandidatesExpression="aql:self.reuse.blocks" domainClass="mindstorms.Block">
            <style xsi:type="style:DotDescription" labelSize="12" labelExpression="aql:self.computeTooltip()" labelAlignment="LEFT" tooltipExpression="aql:self.computeTooltip()" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" labelSize="12" labelExpression="service:computeLabel()" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Procedure_16px.png" tooltipExpression="service:computeTooltip()" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']" foregroundColor="//@userColorsPalettes[name='MindstormsColorsPalette']/@entries[name='Green3']">
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="MS_Actions" label="Actions" icon="/fr.obeo.dsl.mindstorms.design/icons/Actions_16px.png">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Delay" label="Delay" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Delay_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoBackward" label="Go backward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoBackward_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoForward" label="Go forward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoForward_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="50"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoTo" label="Go to" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoTo_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_ReturnToBase" label="Base" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ReturnToBase_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="blocks"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="blocks"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoToEnemy" label="Enemy" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoToEnemy_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoToEnemy" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoToEnemy" referenceName="blocks"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoToEnemy" referenceName="blocks"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Grab" label="Grab" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Grab_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="blocks"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="blocks"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Release" label="Release" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Release_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="blocks"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="blocks"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Rotate_left" label="Left" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Rotate_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Rotate_right" label="Right" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']/@subNodeMappings[name='MDN_ProcedureBlock'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Rotate_Right_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="-90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="-90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::ReuseInstruction)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.reuse">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="-90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MS_Flow" label="Flows" icon="/fr.obeo.dsl.mindstorms.design/icons/Flow_16px.png">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_While" label="While" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/While_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_If" label="If" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/If_16px.png" extraMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MT_Conditions" label="Conditions" icon="/fr.obeo.dsl.mindstorms.design/icons/If_16px.png">
          <ownedTools xsi:type="tool:ToolGroup" name="Colors">
            <tools xsi:type="tool_1:ToolDescription" name="MT_BLACK_COLOR_CONDITION" label="Black" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensor_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':black')"/>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="MT_GREEN_COLOR_CONDITION" label="Green" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensorGreen_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':green')"/>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="MT_Red_COLOR_CONDITION" label="Red" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensorRed_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':red')"/>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="MT_BLUE_COLOR_CONDITION" label="Blue" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensorBlue_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':blue')"/>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="MT_TOUCH" label="Touch" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/TouchSensor_16px.png">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':touch')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="MT_DISTANCE" label="Distance" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Distance_16px.png">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editDistance()"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MT_Procedures" label="Procedures" icon="/fr.obeo.dsl.mindstorms.design/icons/Procedure_16px.png">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_Procedure" label="Procedure" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Procedure_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createProcedure()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_ReuseProcedure" label="Reuse existing Procedure" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Reuse_Procedure_16px.png">
            <variable name="container">
              <subVariables xsi:type="tool_1:SelectModelElementVariable" name="procedure" candidatesExpression="aql:container.getExistingProcedures()" message="Select the procedure to reuse :"/>
            </variable>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReuseInstruction" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reuse" valueExpression="var:procedure"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:procedure.name"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(mindstorms::Arbitrator)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reuse" valueExpression="var:procedure"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MT_Edit" label="Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_Element" label="Edit Element" inputLabelExpression="service:self.getEditLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editElement(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="MD_DeleteElement" label="Delete Element">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="MRE_InstructionSource" label="Reconnect Instruction Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectInstructionSource(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="MRE_InstructionTarget" label="Reconnect Instruction Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectInstructionTarget(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="MDC_NewIDD" label="New Instruction Detailed Diagram" titleExpression="aql:self.name + ' Detailed Diagram'" diagramDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="MDD_SwitchColor" label="Switch Color" precondition="aql:self.condition.oclIsKindOf(mindstorms::ColorSensor)" mappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.condition">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:self.isColor(mindstorms::Color::GREEN)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="color" valueExpression="aql:'GREEN'"/>
                  </cases>
                  <cases conditionExpression="aql:self.isColor(mindstorms::Color::RED)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="color" valueExpression="aql:'RED'"/>
                  </cases>
                  <cases conditionExpression="aql:self.isColor(mindstorms::Color::BLACK)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="color" valueExpression="aql:'BLACK'"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="color" valueExpression="aql:'BLACK'"/>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="MD_DoNotDeleteBeginEnd" label="Do Not Delete Begin and End" precondition="false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="MDC_OpenDiagram" label="Open Detailed Diagram" mappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="MDC_OpenDiagramReuse" label="Open Detailed Diagram from Reuse" mappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.reuse">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="BlockContainerDiagram" label="Block Container Detailed Diagram" titleExpression="aql:self.name + ' Detailed Diagram'" domainClass="mindstorms.BlockContainer" enablePopupBars="true">
      <metamodel href="http://www.obeo.fr/dsl/mindstorms/1.0.0#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="BlockContainerDiagramDefaultLayer" label="Default">
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="BDN_Action" label="Detailed Action" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_Element']" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Action" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MDN_Action']"/>
        <nodeMappings name="BDN_DetailedBegin" label="Detailed Begin" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_DoNotDeleteBeginEnd']" semanticCandidatesExpression="aql:self" domainClass="mindstorms.BlockContainer">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" labelAlignment="LEFT" tooltipExpression="aql:'Begin'" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/Begin_48px.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="BDN_DetailedEnd" label="Detailed End" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_DoNotDeleteBeginEnd']" semanticCandidatesExpression="aql:self" domainClass="mindstorms.BlockContainer">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" labelAlignment="LEFT" tooltipExpression="aql:'End'" sizeComputationExpression="-1" workspacePath="/fr.obeo.dsl.mindstorms.design/icons/End_48px.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="BDE_EdgeBlock" label="Edge Block" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" targetFinderExpression="service:getNextBlock()" reconnections="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BRE_BlockSource'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BRE_BlockTarget']">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="BDE_BeginToFirstBlock" label="Begin To First Block" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_DetailedBegin']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" targetFinderExpression="aql:self.blocks->first()">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="BDE_LastBlockToEnd" label="Last Block To End" preconditionExpression="aql:self.eContainer(mindstorms::BlockContainer).blocks->last() = self" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_DetailedEnd']" targetFinderExpression="aql:self.eContainer(mindstorms::BlockContainer)">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="BDC_DetailedWhile" label="Detailed While" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_Element']" semanticCandidatesExpression="aql:self.blocks" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDD_SwitchColor']" domainClass="mindstorms.While" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']/@subNodeMappings[name='MDN_WhileBlock']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="BDC_DetailedIf" label="Detailed If" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BDE_Element']" semanticCandidatesExpression="aql:self.blocks" doubleClickDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDD_SwitchColor']" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']/@subNodeMappings[name='MDN_IfBlock']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']"/>
        <toolSections name="BDS_Actions" label="Actions" icon="/fr.obeo.dsl.mindstorms.design/icons/Actions_16px.png">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_Delay" label="Delay" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Delay_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_GoBackward" label="Go backward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoBackward_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="true"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="true"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_GoForward" label="Go forward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoForward_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="true"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="infinite" valueExpression="true"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_GoTo" label="Go to" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/GoTo_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_Grab" label="Grab" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Grab_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="blocks"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_Release" label="Release" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Release_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="blocks"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_ReturnToBase" label="Base" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ReturnToBase_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="instructions"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="blocks"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BDC_Rotate" label="Rotate" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@nodeMappings[name='BDN_Action']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Rotate_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="BDS_Flow" label="Flows" icon="/fr.obeo.dsl.mindstorms.design/icons/Flow_16px.png">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ICC_While" label="While" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedWhile']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/While_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ICC_If" label="If" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='BlockContainerDiagram']/@defaultLayer/@containerMappings[name='BDC_DetailedIf']" iconPath="/fr.obeo.dsl.mindstorms.design/icons/If_16px.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::BlockContainer)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="blocks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MT_Conditions" label="Conditions" icon="/fr.obeo.dsl.mindstorms.design/icons/If_16px.png">
          <ownedTools xsi:type="tool:ToolGroup" name="Colors">
            <tools xsi:type="tool_1:ToolDescription" name="MT_BLACK_COLOR_CONDITION" label="Black" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensor_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':black')"/>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="MT_GREEN_COLOR_CONDITION" label="Green" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensorGreen_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':green')"/>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="MT_Red_COLOR_CONDITION" label="Red" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/ColorSensorRed_16px.png">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':red')"/>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="MT_TOUCH" label="Touch" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/TouchSensor_16px.png">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editElement(element.name+':touch')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="MT_DISTANCE" label="Distance" precondition="aql:self.oclIsKindOf(mindstorms::ConditionContainer)" iconPath="/fr.obeo.dsl.mindstorms.design/icons/Distance_16px.png">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.editDistance()"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="BDS_Edit" label="Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="BDE_Element" label="Edit Element">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editElement(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="BDE_DeleteElement" label="Delete Element">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="BDE_DoNotDeleteBeginEnd" label="Do Not Delete Begin and End" precondition="false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="BRE_BlockSource" label="Reconnect Block Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectBlockSource(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="BRE_BlockTarget" label="Reconnect Block Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectBlockTarget(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.EdgeServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.EditServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.LabelServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.TooltipServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.CreateServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="MindstormsColorsPalette">
    <entries xsi:type="description:UserFixedColor" red="40" green="174" blue="176" name="Green1"/>
    <entries xsi:type="description:UserFixedColor" red="209" green="240" blue="240" name="Green2"/>
    <entries xsi:type="description:UserFixedColor" red="144" green="226" blue="226" name="Green3"/>
    <entries xsi:type="description:UserFixedColor" red="205" green="20" blue="2" name="Red"/>
  </userColorsPalettes>
</description:Group>
